{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Mael/Documents/Study/School/M2/React/cocktails/app/screens/HomeScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CocktailCard from \"../components/CocktailCard\";\nexport default function HomeScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      cocktail = _useState2[0],\n      setCocktail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var fetchCocktail = function fetchCocktail() {\n    return fetch('http://192.168.1.76:8000/api/cocktail').then(function (res) {\n      return res.json();\n    }).then(function (cocktail) {\n      setCocktail(cocktail);\n    });\n  };\n\n  useEffect(function () {\n    setIsLoading(true);\n    fetchCocktail().then(function () {\n      return setIsLoading(false);\n    }).catch(function () {\n      return setIsLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, cocktail ? React.createElement(CocktailCard, {\n    cocktail: cocktail,\n    isLoading: isLoading,\n    onSkip: fetchCocktail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }) : 'No cocktail :(');\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/Mael/Documents/Study/School/M2/React/cocktails/app/screens/HomeScreen.js"],"names":["React","useEffect","useState","CocktailCard","HomeScreen","cocktail","setCocktail","isLoading","setIsLoading","fetchCocktail","fetch","then","res","json","catch","styles","container","StyleSheet","create","flex","backgroundColor","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAGA,OAAOC,YAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA,kBACHF,QAAQ,CAAC,IAAD,CADL;AAAA;AAAA,MAC5BG,QAD4B;AAAA,MAClBC,WADkB;;AAAA,mBAEDJ,QAAQ,CAAC,KAAD,CAFP;AAAA;AAAA,MAE5BK,SAF4B;AAAA,MAEjBC,YAFiB;;AAInC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,WAAOC,KAAK,CAAC,uCAAD,CAAL,CACJC,IADI,CACC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADJ,EAEJF,IAFI,CAEC,UAAAN,QAAQ,EAAI;AAChBC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAJI,CAAP;AAKD,GAND;;AAQAJ,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,aAAa,GACVE,IADH,CACQ;AAAA,aAAMH,YAAY,CAAC,KAAD,CAAlB;AAAA,KADR,EAEGM,KAFH,CAES;AAAA,aAAMN,YAAY,CAAC,KAAD,CAAlB;AAAA,KAFT;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QAAQ,GACL,oBAAC,YAAD;AACA,IAAA,QAAQ,EAAEA,QADV;AAEA,IAAA,SAAS,EAAEE,SAFX;AAGA,IAAA,MAAM,EAAEE,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAML,gBAPN,CADF;AAWD;AAED,IAAMM,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Image, StyleSheet, Text, View } from 'react-native'\n\nimport CocktailCard from '../components/CocktailCard'\n\nexport default function HomeScreen() {\n  const [cocktail, setCocktail] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const fetchCocktail = () => {\n    return fetch('http://192.168.1.76:8000/api/cocktail')\n      .then(res => res.json())\n      .then(cocktail => {\n        setCocktail(cocktail)\n      })\n  }\n\n  useEffect(() => {\n    setIsLoading(true)\n    fetchCocktail()\n      .then(() => setIsLoading(false))\n      .catch(() => setIsLoading(false))\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      {cocktail\n        ? <CocktailCard\n          cocktail={cocktail}\n          isLoading={isLoading}\n          onSkip={fetchCocktail}\n        />\n        : 'No cocktail :('}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}